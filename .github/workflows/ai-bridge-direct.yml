name: AI Bridge Direct (Templates)

on:
  workflow_dispatch:
    inputs:
      mode:
        description: create | update | upsert
        required: true
        default: upsert
      filepath:
        description: Path to write in the repo
        required: true
      content:
        description: Raw content OR template key starting with T0_
        required: true

permissions:
  contents: write

jobs:
  apply:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Resolve template and write file
        run: |
          set -euo pipefail
          MODE="${{ github.event.inputs.mode }}"
          FILEPATH="${{ github.event.inputs.filepath }}"
          CONTENT_INPUT="${{ github.event.inputs.content }}"
          CONTENT="$CONTENT_INPUT"

          # Falls CONTENT wie ein Template-Key aussieht, Datei aus templates/ laden
          if [[ "$CONTENT_INPUT" =~ ^T0_ ]]; then
            TPL_DIR=".github/ai-bridge/templates"
            # 1) exakter Dateiname
            if [[ -f "$TPL_DIR/$CONTENT_INPUT" ]]; then
              CONTENT="$(cat "$TPL_DIR/$CONTENT_INPUT")"
            else
              # 2) gÃ¤ngige Endungen durchprobieren
              for ext in ts tsx js json txt md; do
                if [[ -f "$TPL_DIR/$CONTENT_INPUT.$ext" ]]; then
                  CONTENT="$(cat "$TPL_DIR/$CONTENT_INPUT.$ext")"
                  break
                fi
              done
            fi
          fi

          mkdir -p "$(dirname "$FILEPATH")"
          printf "%s" "$CONTENT" > "$FILEPATH"

      - name: Commit & Push
        run: |
          set -e
          git config user.name "AI Commit Bridge"
          git config user.email "ai-bridge@users.noreply.github.com"
          git add -A
          if git diff --cached --quiet; then
            echo "Nothing to commit."
            exit 0
          fi
          MSG="bridge: ${{ github.event.inputs.mode }} ${{ github.event.inputs.filepath }}"
          git commit -m "$MSG"
          git push
